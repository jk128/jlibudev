package jlibudev.generated;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import jlibudev.generated.UdevLibrary._IO_lock_t;
/**
 * <i>native declaration : target/checkout/libudev/libudev-types.h:1</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _IO_FILE extends Structure {
	/// 0     4
	public int _flags;
	/**
	 * 8     8<br>
	 * C type : char*
	 */
	public Pointer _IO_read_ptr;
	/**
	 * 16     8<br>
	 * C type : char*
	 */
	public Pointer _IO_read_end;
	/**
	 * 24     8<br>
	 * C type : char*
	 */
	public Pointer _IO_read_base;
	/**
	 * 32     8<br>
	 * C type : char*
	 */
	public Pointer _IO_write_base;
	/**
	 * 40     8<br>
	 * C type : char*
	 */
	public Pointer _IO_write_ptr;
	/**
	 * 48     8<br>
	 * C type : char*
	 */
	public Pointer _IO_write_end;
	/**
	 * 56     8<br>
	 * C type : char*
	 */
	public Pointer _IO_buf_base;
	/**
	 * --- cacheline 1 boundary (64 bytes) ---<br>
	 * 64     8<br>
	 * C type : char*
	 */
	public Pointer _IO_buf_end;
	/**
	 * 72     8<br>
	 * C type : char*
	 */
	public Pointer _IO_save_base;
	/**
	 * 80     8<br>
	 * C type : char*
	 */
	public Pointer _IO_backup_base;
	/**
	 * 88     8<br>
	 * C type : char*
	 */
	public Pointer _IO_save_end;
	/**
	 * 96     8<br>
	 * C type : _IO_marker*
	 */
	public jlibudev.generated._IO_marker.ByReference _markers;
	/**
	 * 104     8<br>
	 * C type : _IO_FILE*
	 */
	public _IO_FILE.ByReference _chain;
	/// 112     4
	public int _fileno;
	/// 116     4
	public int _flags2;
	/**
	 * 120     8<br>
	 * C type : __off_t
	 */
	public int _old_offset;
	/**
	 * --- cacheline 2 boundary (128 bytes) ---<br>
	 * 128     2
	 */
	public int _cur_column;
	/// 130     1
	public byte _vtable_offset;
	/**
	 * 131     1<br>
	 * C type : char[1]
	 */
	public byte[] _shortbuf = new byte[(1)];
	/**
	 * 136     8<br>
	 * C type : _IO_lock_t*
	 */
	public _IO_lock_t _lock;
	/**
	 * 144     8<br>
	 * C type : __off64_t
	 */
	public int _offset;
	/**
	 * 152     8<br>
	 * C type : void*
	 */
	public Pointer __pad1;
	/**
	 * 160     8<br>
	 * C type : void*
	 */
	public Pointer __pad2;
	/**
	 * 168     8<br>
	 * C type : void*
	 */
	public Pointer __pad3;
	/**
	 * 176     8<br>
	 * C type : void*
	 */
	public Pointer __pad4;
	/// 184     8
	public NativeSize __pad5;
	/**
	 * --- cacheline 3 boundary (192 bytes) ---<br>
	 * 192     4
	 */
	public int _mode;
	/**
	 * 196    20<br>
	 * C type : char[20]
	 */
	public byte[] _unused2 = new byte[(20)];
	public _IO_FILE() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"_flags", "_IO_read_ptr", "_IO_read_end", "_IO_read_base", "_IO_write_base", "_IO_write_ptr", "_IO_write_end", "_IO_buf_base", "_IO_buf_end", "_IO_save_base", "_IO_backup_base", "_IO_save_end", "_markers", "_chain", "_fileno", "_flags2", "_old_offset", "_cur_column", "_vtable_offset", "_shortbuf", "_lock", "_offset", "__pad1", "__pad2", "__pad3", "__pad4", "__pad5", "_mode", "_unused2"});
	}
	public static class ByReference extends _IO_FILE implements Structure.ByReference {
		
	};
	public static class ByValue extends _IO_FILE implements Structure.ByValue {
		
	};
}
