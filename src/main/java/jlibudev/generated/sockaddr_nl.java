package jlibudev.generated;
import com.sun.jna.Structure;
import jlibudev.generated.UdevLibrary.__u32;
import jlibudev.generated.UdevLibrary.sa_family_t;
/**
 * <i>native declaration : target/checkout/libudev/libudev-types.h:291</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class sockaddr_nl extends Structure {
	/**
	 * 0     2<br>
	 * C type : sa_family_t
	 */
	public sa_family_t nl_family;
	/// 2     2
	public int nl_pad;
	/**
	 * 4     4<br>
	 * C type : __u32
	 */
	public __u32 nl_pid;
	/**
	 * 8     4<br>
	 * C type : __u32
	 */
	public __u32 nl_groups;
	public sockaddr_nl() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"nl_family", "nl_pad", "nl_pid", "nl_groups"});
	}
	/**
	 * @param nl_family 0     2<br>
	 * C type : sa_family_t<br>
	 * @param nl_pad 2     2<br>
	 * @param nl_pid 4     4<br>
	 * C type : __u32<br>
	 * @param nl_groups 8     4<br>
	 * C type : __u32
	 */
	public sockaddr_nl(sa_family_t nl_family, int nl_pad, __u32 nl_pid, __u32 nl_groups) {
		super();
		this.nl_family = nl_family;
		this.nl_pad = nl_pad;
		this.nl_pid = nl_pid;
		this.nl_groups = nl_groups;
		initFieldOrder();
	}
	public static class ByReference extends sockaddr_nl implements Structure.ByReference {
		
	};
	public static class ByValue extends sockaddr_nl implements Structure.ByValue {
		
	};
}
