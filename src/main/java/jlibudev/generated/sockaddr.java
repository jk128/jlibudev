package jlibudev.generated;
import com.sun.jna.Structure;
import jlibudev.generated.UdevLibrary.sa_family_t;
/**
 * <i>native declaration : target/checkout/libudev/libudev-types.h:242</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class sockaddr extends Structure {
	/**
	 * 0     2<br>
	 * C type : sa_family_t
	 */
	public sa_family_t sa_family;
	/**
	 * 2    14<br>
	 * C type : char[14]
	 */
	public byte[] sa_data = new byte[(14)];
	public sockaddr() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"sa_family", "sa_data"});
	}
	/**
	 * @param sa_family 0     2<br>
	 * C type : sa_family_t<br>
	 * @param sa_data 2    14<br>
	 * C type : char[14]
	 */
	public sockaddr(sa_family_t sa_family, byte sa_data[]) {
		super();
		this.sa_family = sa_family;
		if (sa_data.length != this.sa_data.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.sa_data = sa_data;
		initFieldOrder();
	}
	public static class ByReference extends sockaddr implements Structure.ByReference {
		
	};
	public static class ByValue extends sockaddr implements Structure.ByValue {
		
	};
}
