package jlibudev.generated;
import com.sun.jna.Structure;
/**
 * <i>native declaration : target/checkout/libudev/libudev-types.h:341</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class udev_monitor_netlink_header extends Structure {
	/**
	 * 0     8<br>
	 * C type : char[8]
	 */
	public byte[] prefix = new byte[(8)];
	/// 8     4
	public int magic;
	/// 12     4
	public int header_size;
	/// 16     4
	public int properties_off;
	/// 20     4
	public int properties_len;
	/// 24     4
	public int filter_subsystem_hash;
	/// 28     4
	public int filter_devtype_hash;
	/// 32     4
	public int filter_tag_bloom_hi;
	/// 36     4
	public int filter_tag_bloom_lo;
	public udev_monitor_netlink_header() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"prefix", "magic", "header_size", "properties_off", "properties_len", "filter_subsystem_hash", "filter_devtype_hash", "filter_tag_bloom_hi", "filter_tag_bloom_lo"});
	}
	/**
	 * @param prefix 0     8<br>
	 * C type : char[8]<br>
	 * @param magic 8     4<br>
	 * @param header_size 12     4<br>
	 * @param properties_off 16     4<br>
	 * @param properties_len 20     4<br>
	 * @param filter_subsystem_hash 24     4<br>
	 * @param filter_devtype_hash 28     4<br>
	 * @param filter_tag_bloom_hi 32     4<br>
	 * @param filter_tag_bloom_lo 36     4
	 */
	public udev_monitor_netlink_header(byte prefix[], int magic, int header_size, int properties_off, int properties_len, int filter_subsystem_hash, int filter_devtype_hash, int filter_tag_bloom_hi, int filter_tag_bloom_lo) {
		super();
		if (prefix.length != this.prefix.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.prefix = prefix;
		this.magic = magic;
		this.header_size = header_size;
		this.properties_off = properties_off;
		this.properties_len = properties_len;
		this.filter_subsystem_hash = filter_subsystem_hash;
		this.filter_devtype_hash = filter_devtype_hash;
		this.filter_tag_bloom_hi = filter_tag_bloom_hi;
		this.filter_tag_bloom_lo = filter_tag_bloom_lo;
		initFieldOrder();
	}
	public static class ByReference extends udev_monitor_netlink_header implements Structure.ByReference {
		
	};
	public static class ByValue extends udev_monitor_netlink_header implements Structure.ByValue {
		
	};
}
