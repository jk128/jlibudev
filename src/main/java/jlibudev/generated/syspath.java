package jlibudev.generated;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * <i>native declaration : target/checkout/libudev/libudev-types.h:193</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class syspath extends Structure {
	/**
	 * 0     8<br>
	 * C type : char*
	 */
	public Pointer syspath;
	/// 8     8
	public NativeSize len;
	public syspath() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"syspath", "len"});
	}
	/**
	 * @param syspath 0     8<br>
	 * C type : char*<br>
	 * @param len 8     8
	 */
	public syspath(Pointer syspath, NativeSize len) {
		super();
		this.syspath = syspath;
		this.len = len;
		initFieldOrder();
	}
	public static class ByReference extends syspath implements Structure.ByReference {
		
	};
	public static class ByValue extends syspath implements Structure.ByValue {
		
	};
}
