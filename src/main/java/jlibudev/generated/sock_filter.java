package jlibudev.generated;
import com.sun.jna.Structure;
import jlibudev.generated.UdevLibrary.__u16;
import jlibudev.generated.UdevLibrary.__u32;
import jlibudev.generated.UdevLibrary.__u8;
/**
 * <i>native declaration : target/checkout/libudev/libudev-types.h:300</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class sock_filter extends Structure {
	/**
	 * 0     2<br>
	 * C type : __u16
	 */
	public __u16 code;
	/**
	 * 2     1<br>
	 * C type : __u8
	 */
	public __u8 jt;
	/**
	 * 3     1<br>
	 * C type : __u8
	 */
	public __u8 jf;
	/**
	 * 4     4<br>
	 * C type : __u32
	 */
	public __u32 k;
	public sock_filter() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new String[]{"code", "jt", "jf", "k"});
	}
	/**
	 * @param code 0     2<br>
	 * C type : __u16<br>
	 * @param jt 2     1<br>
	 * C type : __u8<br>
	 * @param jf 3     1<br>
	 * C type : __u8<br>
	 * @param k 4     4<br>
	 * C type : __u32
	 */
	public sock_filter(__u16 code, __u8 jt, __u8 jf, __u32 k) {
		super();
		this.code = code;
		this.jt = jt;
		this.jf = jf;
		this.k = k;
		initFieldOrder();
	}
	public static class ByReference extends sock_filter implements Structure.ByReference {
		
	};
	public static class ByValue extends sock_filter implements Structure.ByValue {
		
	};
}
